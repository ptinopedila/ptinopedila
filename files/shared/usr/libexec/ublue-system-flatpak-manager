#!/usr/bin/env bash

set -ouex pipefail

NO_TOUCH_FILE="/etc/ublue/do_not_touch_flatpaks"

if [[ -f $NO_TOUCH_FILE ]]; then
  echo "Flatpak 'do not touch' exits. Exiting..."
  exit 0
fi

# Script Version
VER=4
VER_FILE="/etc/ublue/flatpak_manager_version_ptinopedila"

if [[ -f $VER_FILE ]]; then
    VER_RAN=$(cat $VER_FILE)
else
    VER_RAN=0
fi

# Run script if updated
if [[ -f $VER_FILE && $VER == $VER_RAN ]]; then
  echo "Flatpak manager v$VER has already ran. Exiting..."
  exit 0
fi

# Remove flatpaks installed from the fedora repo
fedora_repo_flatpaks=($(flatpak list --columns=application,origin | awk '$2 == "fedora" {print $1}'))
echo $?
fedora_repo_flatpaks_without_platform=($(flatpak list --columns=application,origin | awk '$2 == "fedora" {print $1}' | { grep -v "org.fedoraproject.Platform" || test $? = 1; }))

if [ ${#fedora_repo_flatpaks[@]} -eq 1 ]; then
  flatpak remove --system --noninteractive "${fedora_repo_flatpaks[@]}"
fi

# Opt out of and remove Fedora's flatpak repo
if grep -qz 'fedora' <<< $(flatpak remotes); then
  /usr/lib/fedora-third-party/fedora-third-party-opt-out
  /usr/bin/fedora-third-party disable
  flatpak remote-delete fedora --force
fi

# Ensure Flathub is enabled
flatpak remote-add --if-not-exists --system flathub /usr/etc/flatpak/remotes.d/flathub.flatpakrepo
flatpak remote-modify --system --enable flathub

# Lists of flatpaks
INSTALL_LIST=$(cat /etc/flatpak/system/install)
REMOVE_LIST=$(cat /etc/flatpak/system/remove)

# # Re-install the default flatpaks from flathub
# if [ ${#fedora_repo_flatpaks_without_platform[@]} -eq 1 ]; then
#   flatpak install --system -y "${fedora_repo_flatpaks_without_platform[@]}"
# fi

# Install flatpaks in list
if [[ -n $INSTALL_LIST ]]; then
  flatpak install --system --noninteractive flathub "${INSTALL_LIST[@]}"
fi

# Remove flatpaks in list once
if [[ ! -f $VER_FILE && -n $REMOVE_LIST ]]; then
  flatpak remove --system --noninteractive "${REMOVE_LIST[@]}"
fi

mkdir -p /etc/ublue
echo $VER > $VER_FILE
