#!/usr/bin/env bash

# Script Version
VER=4
VER_FILE="/etc/ublue/flatpak_manager_version"
VER_RAN=$(cat $VER_FILE)
NO_TOUCH_FILE="/etc/ublue/do_not_touch_flatpaks"

if [[ -f $NO_TOUCH_FILE ]]; then
  echo "Flatpak 'do not touch' exits. Exiting..."
  exit 0
fi

# Run script if updated
if [[ -f $VER_FILE && $VER = $VER_RAN ]]; then
  echo "Flatpak manager v$VER has already ran. Exiting..."
  exit 0
fi

# Remove flatpaks installed from the fedora repo
fedora_repo_flatpaks=($(flatpak list --columns=application,origin | awk '$2 == "fedora" {print $1}' | grep -v "org.fedoraproject.Platform"))
flatpak remove --system --noninteractive "${fedora_repo_flatpaks[@]}"

# Opt out of and remove Fedora's flatpak repo
if grep -qz 'fedora' <<< $(flatpak remotes); then
  /usr/lib/fedora-third-party/fedora-third-party-opt-out
  /usr/bin/fedora-third-party disable
  flatpak remote-delete fedora --force
fi

# Ensure Flathub is enabled
flatpak remote-add --if-not-exists --system flathub /usr/etc/flatpak/remotes.d/flathub.flatpakrepo
flatpak remote-modify --system --enable flathub

# Lists of flatpaks
FLATPAK_LIST=$(flatpak list --columns=application)
INSTALL_LIST=$(cat /etc/flatpak/system/install)
REMOVE_LIST=$(cat /etc/flatpak/system/remove)

# # Re-install the default flatpaks from flathub
# flatpak install --system -y "${fedora_repo_flatpaks[@]}"

# Install flatpaks in list
if [[ -n $INSTALL_LIST ]]; then
  if ! flatpak install --system --noninteractive flathub ${INSTALL_LIST[@]}; then
    # exit on error
    exit 1
  fi
fi

# Remove flatpaks in list once
if [[ ! -f $VER_FILE && -n $REMOVE_LIST ]]; then
  flatpak remove --system --noninteractive ${REMOVE_LIST[@]}
fi

mkdir -p /etc/ublue
echo $VER > $VER_FILE
